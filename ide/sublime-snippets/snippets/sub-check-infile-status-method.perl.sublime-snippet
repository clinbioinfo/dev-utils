<snippet>
	<content><![CDATA[
sub _checkInfileStatus {

	my \$self = shift;
    my (\$infile) = @_;

    if (!defined(\$infile)){
        \$self->{_logger}->logconfess("infile was not defined");
    }

    my \$errorCtr = 0 ;

    if (!-e \$infile){
        
        \$self->{_logger}->error("input file '\$infile' does not exist");
        
        \$errorCtr++;
    }
    else {

        if (!-f \$infile){
            
            \$self->{_logger}->error("'\$infile' is not a regular file");
            
            \$errorCtr++;
        }

        if (!-r \$infile){
            
            \$self->{_logger}->error("input file '\$infile' does not have read permissions");
            
            \$errorCtr++;
        }
        
        if (!-s \$infile){
            
            \$self->{_logger}->error("input file '\$infile' does not have any content");
            
            \$errorCtr++;
        }
    }
     
    if (\$errorCtr > 0){
        
        \$self->{_logger}->logconfess("Encountered issues with input file '\$infile'");        
    }
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>sub-check-infile-status-method</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.perl</scope>
</snippet>
